# Script to give labels to known C64 memory locations and memory mapped I/O, and to comment code
# containing references to these addresses.  Designed to work with bad references, so no need to
# actually load in the referenced ROMs as if they were libraries.
#
# github c64cryptoboy/c64_ghidra, Jan '23
#
# Found these references useful when writing this script:
# - http://unusedino.de/ec64/technical/project64/memory_maps.html
# - https://archive.org/details/Compute_s_Mapping_the_Commodore_64
# - https://ist.uwaterloo.ca/~schepers/MJK/ascii/1541map.txt
# - https://sta.c64.org/cbm1541mem.html
# - http://www.ffd2.com/fridge/docs/1541dis.html

from ghidra.program.model.address import AddressSet
from ghidra.program.model.symbol.SourceType import USER_DEFINED, IMPORTED
from ghidra.program.model.symbol.RefType import CONDITIONAL_JUMP

# operand type bits; python conversion from
#    https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Framework/SoftwareModeling
#       /src/main/java/ghidra/program/model/lang/OperandType.java
READ      = 0x00000001  # Bit set if operand refers to an address being read.
WRITE     = 0x00000002  # Bit set if operand refers to an address being written to.
INDIRECT  = 0x00000004  # Bit set if operand is an indirect reference.
IMMEDIATE = 0x00000008  # Bit set if operand is an immediate value.
RELATIVE  = 0x00000010  # Bit set if operand depends on the instruction's address.
IMPLICIT  = 0x00000020  # Bit set if operand is implicit.
CODE      = 0x00000040  # Bit set it the address referred to contains code.
DATA      = 0x00000080  # Bit set if the address referred to contains data.
PORT      = 0x00000100  # Bit set if the operand is a port.
REGISTER  = 0x00000200  # Bit set if the operand is a register.
LIST      = 0x00000400  # Bit set if the operand is a list.
FLAG      = 0x00000800  # Bit set if the operand is a flag.
TEXT      = 0x00001000  # Bit set if the operand is text.
ADDRESS   = 0x00002000  # Bit set if the operand is used as an address (otherwise assume scalar).
SCALAR    = 0x00004000  # Bit set if the operand is a scalar value
BIT       = 0x00008000  # Bit set if the operand is a bit value
BYTE      = 0x00010000  # Bit set if the operand is a byte value
WORD      = 0x00020000  # Bit set if the operand is a 2-byte value
QUADWORD  = 0x00040000  # Bit set if the operand is an 8-byte value
SIGNED    = 0x00080000  # Bit set if the operand is a signed value
FLOAT     = 0x00100000  # Bit set if the operand is a float value
COP       = 0x00200000  # Bit set if the operand is a co-processor value
DYNAMIC   = 0x00400000  # Bit set if the operand is dynamically defined given some processorContext.  If bit is set then the SCALAR or ADDRESS bit must be set.

romkernal_labels = {
    57344 : ("", "e000:EXP continued From BASIC ROM"),
    57411 : ("polyx", "e043:Series Evaluation"),
    57485 : ("rmulc", "e08d:Constants for RND"),
    57495 : ("rnd", "e097:Perform [rnd]"),
    57593 : ("bioerr", "e0f9:Handle I/O Error in BASIC"),
    57612 : ("bchout", "e10c:Output Character"),
    57618 : ("bchin", "e112:Input Character"),
    57624 : ("bckout", "e118:Set Up For Output"),
    57630 : ("bckin", "e11e:Set Up For Input"),
    57636 : ("bgetin", "e124:Get One Character"),
    57642 : ("sys", "e12a:Perform [sys]"),
    57686 : ("savet", "e156:Perform [save]"),
    57701 : ("verfyt", "e165:Perform [verify / load]"),
    57790 : ("opent", "e1be:Perform [open]"),
    57799 : ("closet", "e1c7:Perform [close]"),
    57812 : ("slpara", "e1d4:Get Parameters For LOAD/SAVE"),
    57856 : ("combyt", "e200:Get Next One Byte Parameter"),
    57862 : ("deflt", "e206:Check Default Parameters"),
    57870 : ("cmmerr", "e20e:Check For Comma"),
    57881 : ("ocpara", "e219:Get Parameters For OPEN/CLOSE"),
    57956 : ("cos", "e264:Perform [cos]"),
    57963 : ("sin", "e26b:Perform [sin]"),
    58036 : ("tan", "e2b4:Perform [tan]"),
    58126 : ("atn", "e30e:Perform [atn]"),
    58235 : ("bassft", "e37b:BASIC Warm Start [RUNSTOP-RESTORE]"),
    58260 : ("init", "e394:BASIC Cold Start"),
    58274 : ("initat", "e3a2:CHRGET For Zero-page"),
    58303 : ("initcz", "e3bf:Initialize BASIC RAM"),
    58402 : ("initms", "e422:Output Power-Up Message"),
    58439 : ("bvtrs", "e447:Table of BASIC Vectors (for 0300)"),
    58451 : ("initv", "e453:Initialize Vectors"),
    58463 : ("words", "e45f:Power-Up Message"),
    58541 : ("", "e4ad:Patch for BASIC Call to CHKOUT"),
    58586 : ("", "e4da:Reset Character Colour"),
    58592 : ("", "e4e0:Pause After Finding Tape File"),
    58604 : ("", "e4ec:RS-232 Timing Table -- PAL"),
    58624 : ("iobase", "e500:Get I/O Address"),
    58629 : ("screen", "e505:Get Screen Size"),
    58634 : ("plot", "e50a:Put / Get Row And Column"),
    58648 : ("cint1", "e518:Initialize I/O"),
    58692 : ("", "e544:Clear Screen"),
    58726 : ("", "e566:Home Cursor"),
    58732 : ("", "e56c:Set Screen Pointers"),
    58778 : ("", "e59a:Set I/O Defaults (Unused Entry)"),
    58784 : ("", "e5a0:Set I/O Defaults"),
    58804 : ("lp2", "e5b4:Get Character From Keyboard Buffer"),
    58826 : ("", "e5ca:Input From Keyboard"),
    58930 : ("", "e632:Input From Screen or Keyboard"),
    59012 : ("", "e684:Quotes Test"),
    59025 : ("", "e691:Set Up Screen Print"),
    59062 : ("", "e6b6:Advance Cursor"),
    59117 : ("", "e6ed:Retreat Cursor"),
    59137 : ("", "e701:Back on to Previous Line"),
    59158 : ("", "e716:Output to Screen"),
    59178 : ("", "e72a:-unshifted characters-"),
    59348 : ("", "e7d4:-shifted characters-"),
    59516 : ("", "e87c:Go to Next Line"),
    59537 : ("", "e891:Output <CR>"),
    59553 : ("", "e8a1:Check Line Decrement"),
    59571 : ("", "e8b3:Check Line Increment"),
    59595 : ("", "e8cb:Set Colour Code"),
    59610 : ("", "e8da:Colour Code Table"),
    59626 : ("", "e8ea:Scroll Screen"),
    59749 : ("", "e965:Open A Space On The Screen"),
    59848 : ("", "e9c8:Move A Screen Line"),
    59872 : ("", "e9e0:Syncronise Colour Transfer"),
    59888 : ("", "e9f0:Set Start of Line"),
    59903 : ("", "e9ff:Clear Screen Line"),
    59923 : ("", "ea13:Print To Screen"),
    59940 : ("", "ea24:Syncronise Colour Pointer"),
    59953 : ("", "ea31:Main IRQ Entry Point"),
    60039 : ("scnkey", "ea87:Scan Keyboard"),
    60125 : ("", "eadd:Process Key Image"),
    60281 : ("", "eb79:Pointers to Keyboard decoding tables"),
    60484 : ("", "ec44:Graphics/Text Control"),
    60647 : ("", "ece7:Shift-Run Equivalent"),
    60656 : ("", "ecf0:Low Byte Screen Line Addresses"),
    60681 : ("talk", "ed09:Send TALK Command on Serial Bus"),
    60684 : ("listn", "ed0c:Send LISTEN Command on Serial Bus"),
    60736 : ("", "ed40:Send Data On Serial Bus"),
    60845 : ("", "edad:Flag Errors"),
    60845 : ("", "edad:Status #80 - device not present"),
    60848 : ("", "edb0:Status #03 - write timeout"),
    60857 : ("second", "edb9:Send LISTEN Secondary Address"),
    60862 : ("", "edbe:Clear ATN"),
    60871 : ("tksa", "edc7:Send TALK Secondary Address"),
    60876 : ("", "edcc:Wait For Clock"),
    60893 : ("ciout", "eddd:Send Serial Deferred"),
    60911 : ("untlk", "edef:Send UNTALK / UNLISTEN"),
    60947 : ("acptr", "ee13:Receive From Serial Bus"),
    61061 : ("", "ee85:Serial Clock On"),
    61070 : ("", "ee8e:Serial Clock Off"),
    61079 : ("", "ee97:Serial Output 1"),
    61088 : ("", "eea0:Serial Output 0"),
    61097 : ("", "eea9:Get Serial Data And Clock In"),
    61107 : ("", "eeb3:Delay 1 ms"),
    61115 : ("", "eebb:RS-232 Send"),
    61190 : ("", "ef06:Send New RS-232 Byte"),
    61230 : ("", "ef2e:'No DSR' / 'No CTS' Error"),
    61241 : ("", "ef39:Disable Timer"),
    61258 : ("", "ef4a:Compute Bit Count"),
    61273 : ("", "ef59:RS-232 Receive"),
    61310 : ("", "ef7e:Set Up To Receive"),
    61328 : ("", "ef90:Process RS-232 Byte"),
    61409 : ("", "efe1:Submit to RS-232"),
    61453 : ("", "f00d:No DSR (Data Set Ready) Error"),
    61463 : ("", "f017:Send to RS-232 Buffer"),
    61517 : ("", "f04d:Input From RS-232"),
    61574 : ("", "f086:Get From RS-232"),
    61604 : ("", "f0a4:Serial Bus Idle"),
    61629 : ("", "f0bd:Table of Kernal I/O Messages"),
    61739 : ("", "f12b:Print Message if Direct"),
    61743 : ("", "f12f:Print Message"),
    61758 : ("getin", "f13e:Get a byte"),
    61783 : ("chrin", "f157:Input a byte"),
    61849 : ("", "f199:Get From Tape / Serial / RS-232"),
    61898 : ("chrout", "f1ca:Output One Character"),
    61966 : ("chkin", "f20e:Set Input Device"),
    62032 : ("chkout", "f250:Set Output Device"),
    62097 : ("close", "f291:Close File"),
    62223 : ("", "f30f:Find File"),
    62239 : ("", "f31f:Set File values"),
    62255 : ("clall", "f32f:Abort All Files"),
    62259 : ("clrchn", "f333:Restore Default I/O"),
    62282 : ("open", "f34a:Open File"),
    62421 : ("", "f3d5:Send Secondary Address"),
    62473 : ("", "f409:Open RS-232"),
    62622 : ("load", "f49e:Load RAM"),
    62648 : ("", "f4b8:Load File From Serial Bus"),
    62771 : ("", "f533:Load File From Tape"),
    62927 : ("", 'f5af:Print "SEARCHING"'),
    62913 : ("", "f5c1:Print Filename"),
    62930 : ("", 'f5d2:Print "LOADING / VERIFYING"'),
    62941 : ("save", "f5dd:Save RAM"),
    62970 : ("", "f5fa:Save to Serial Bus"),
    63065 : ("", "f659:Save to Tape"),
    63119 : ("", 'f68f:Print "SAVING"'),
    63131 : ("udtim", "f69b:Bump Clock"),
    63197 : ("rdtim", "f6dd:Get Time"),
    63204 : ("settim", "f6e4:Set Time"),
    63213 : ("stop", "f6ed:Check STOP Key"),
    63227 : ("", "f6fb:Output I/O Error Messages"),
    63227 : ("", "f6fb:'too many files'"),
    63230 : ("", "f6fe:'file open'"),
    63233 : ("", "f701:'file not open'"),
    63236 : ("", "f704:'file not found'"),
    63239 : ("", "f707:'device not present'"),
    63242 : ("", "f70a:'not input file'"),
    63245 : ("", "f70d:'not output file'"),
    63248 : ("", "f710:'missing filename'"),
    63251 : ("", "f713:'illegal device number'"),
    63277 : ("", "f72d:Find Any Tape Header"),
    63338 : ("", "f76a:Write Tape Header"),
    63440 : ("", "f7d0:Get Buffer Address"),
    63447 : ("", "f7d7:Set Buffer Stat / End Pointers"),
    63466 : ("", "f7ea:Find Specific Tape Header"),
    63501 : ("", "f80d:Bump Tape Pointer"),
    63511 : ("", 'f817:Print "PRESS PLAY ON TAPE"'),
    63534 : ("", "f82e:Check Tape Status"),
    63544 : ("", 'f838:Print "PRESS RECORD..."'),
    63553 : ("", "f841:Initiate Tape Read"),
    63588 : ("", "f864:Initiate Tape Write"),
    63605 : ("", "f875:Common Tape Code"),
    63696 : ("", "f8d0:Check Tape Stop"),
    63714 : ("", "f8e2:Set Read Timing"),
    63788 : ("", "f92c:Read Tape Bits"),
    64096 : ("", "fa60:Store Tape Characters"),
    64398 : ("", "fb8e:Reset Tape Pointer"),
    64407 : ("", "fb97:New Character Setup"),
    64422 : ("", "fba6:Send Tone to Tape"),
    64456 : ("", "fbc8:Write Data to Tape"),
    64461 : ("", "fbcd:IRQ Entry Point"),
    64599 : ("", "fc57:Write Tape Leader"),
    64659 : ("", "fc93:Restore Normal IRQ"),
    64696 : ("", "fcb8:Set IRQ Vector"),
    64714 : ("", "fcca:Kill Tape Motor"),
    64721 : ("", "fcd1:Check Read / Write Pointer"),
    64731 : ("", "fcdb:Bump Read / Write Pointer"),
    64738 : ("", "fce2:Power-Up RESET Entry"),
    64770 : ("", "fd02:Check For 8-ROM"),
    64786 : ("", "fd12:8-ROM Mask '80CBM'"),
    64789 : ("restor", "fd15:Restore Kernal Vectors (at 0314)"),
    64794 : ("vector", "fd1a:Change Vectors For User"),
    64816 : ("", "fd30:Kernal Reset Vectors"),
    64848 : ("ramtas", "fd50:Initialise System Constants"),
    64923 : ("", "fd9b:IRQ Vectors For Tape I/O"),
    64931 : ("ioinit", "fda3:Initialise I/O"),
    64989 : ("", "fddd:Enable Timer"),
    65017 : ("setnam", "fdf9:Set Filename"),
    65024 : ("setlfs", "fe00:Set Logical File Parameters"),
    65031 : ("readst", "fe07:Get I/O Status Word"),
    65048 : ("setmsg", "fe18:Control OS Messages"),
    65057 : ("settmo", "fe21:Set IEEE Timeout"),
    65061 : ("memtop", "fe25:Read / Set Top of Memory"),
    65076 : ("membot", "fe34:Read / Set Bottom of Memory"),
    65091 : ("", "fe43:NMI Transfer Entry"),
    65126 : ("", "fe66:Warm Start Basic [BRK]"),
    65212 : ("", "febc:Exit Interrupt"),
    65218 : ("", "fec2:RS-232 Timing Table - NTSC"),
    65238 : ("", "fed6:NMI RS-232 In"),
    65287 : ("", "ff07:NMI RS-232 Out"),
    65347 : ("", "ff43:Fake IRQ Entry"),
    65352 : ("", "ff48:IRQ Entry"),
    65371 : ("cint", "ff5b:Initialize screen editor"),
    65408 : ("", "ff80:Kernal Version Number [03]"),
    65409 : ("cint", "ff81:Init Editor & Video Chips"),
    65412 : ("ioinit", "ff84:Init I/O Devices  Ports & Timers"),
    65415 : ("ramtas", "ff87:Init Ram & Buffers"),
    65418 : ("restor", "ff8a:Restore Vectors"),
    65421 : ("vector", "ff8d:Change Vectors For User"),
    65424 : ("setmsg", "ff90:Control OS Messages"),
    65427 : ("secnd", "ff93:Send SA After Listen"),
    65430 : ("tksa", "ff96:Send SA After Talk"),
    65433 : ("memtop", "ff99:Set/Read System RAM Top"),
    65436 : ("membot", "ff9c:Set/Read System RAM Bottom"),
    65439 : ("scnkey", "ff9f:Scan Keyboard"),
    65442 : ("settmo", "ffa2:Set Timeout In IEEE"),
    65445 : ("acptr", "ffa5:Handshake Serial Byte In"),
    65448 : ("ciout", "ffa8:Handshake Serial Byte Out"),
    65451 : ("untalk", "ffab:Command Serial Bus UNTALK"),
    65454 : ("unlsn", "ffae:Command Serial Bus UNLISTEN"),
    65457 : ("listn", "ffb1:Command Serial Bus LISTEN"),
    65460 : ("talk", "ffb4:Command Serial Bus TALK"),
    65463 : ("readss", "ffb7:Read I/O Status Word"),
    65466 : ("setlfs", "ffba:Set Logical File Parameters"),
    65469 : ("setnam", "ffbd:Set Filename"),
    65472 : ("iopen", "ffc0:Open Vector [f34a]"),
    65475 : ("iclose", "ffc3:Close Vector [f291]"),
    65478 : ("ichkin", "ffc6:Set Input [f20e]"),
    65481 : ("ichkout", "ffc9:Set Output [f250]"),
    65484 : ("iclrch", "ffcc:Restore I/O Vector [f333]"),
    65487 : ("ichrin", "ffcf:Input Vector chrin [f157]"),
    65490 : ("ichrout", "ffd2:Output Vector chrout [f1ca]"),
    65493 : ("load", "ffd5:Load RAM From Device"),
    65496 : ("save", "ffd8:Save RAM To Device"),
    65499 : ("settim", "ffdb:Set Real-Time Clock"),
    65502 : ("rdtim", "ffde:Read Real-Time Clock"),
    65505 : ("istop", "ffe1:Test-Stop Vector [f6ed]"),
    65508 : ("igetin", "ffe4:Get From Keyboad [f13e]"),
    65511 : ("iclall", "ffe7:Close All Channels And Files [f32f]"),
    65514 : ("udtim", "ffea:Increment Real-Time Clock"),
    65517 : ("screen", "ffed:Return Screen Organization"),
    65520 : ("plot", "fff0:Read / Set Cursor X/Y Position"),
    65523 : ("iobase", "fff3:Return I/O Base Address")
}

ramkernal_labels = {
    144 : ("STATUS", "0090:Kernal I/O Status Word  ST"),
    145 : ("STKEY", "0091:Flag: $7F = STOP key"),
    146 : ("SVXT", "0092:Timing Constant for Tape"),
    147 : ("VERCKK", "0093:Flag: 0 = Load, 1 = Verify"),
    148 : ("C3PO", "0094:Flag: Serial Bus - Output Character buffered"),
    149 : ("BSOUR", "0095:Buffered Character for Serial Bus"),
    150 : ("SYNO", "0096:Cassette Sync. number"),
    151 : ("TEMPX", "0097:Temporary storage of X Register during CHRIN"),
    151 : ("TEMPY", "0097:Temporary storage of Y Register during RS232 fetch"),
    152 : ("LDTND", "0098:Number of Open Files/Index to File Table"),
    153 : ("DFLTN", "0099:Default Input Device (0)"),
    154 : ("DFLTO", "009A:Default Output Device (3)"),
    155 : ("PRTY", "009B:Parity of Byte Output to Tape"),
    156 : ("DPSW", "009C:Flag: Byte received from Tape"),
    157 : ("MSGFLG", "009D:Set error message mode"),
    158 : ("FNMIDX", "009E:Index to Cassette File name/Header ID for Tape write"),
    158 : ("PTR1", "009E:Tape Error log pass 1"),
    159 : ("PTR2", "009F:Tape Error log pass 2"),
    160 : ("TIME", "00A0:Real-time jiffy Clock, Update Routine: UDTIMK ($F69B)"),
    163 : ("TSFCNT", "00A3:Bit Counter Tape Read or Write/Serial Bus"),
    164 : ("TBTCNT", "00A4:Pulse Counter Tape Read or Write/Serial Bus shift Counter"),
    165 : ("CNTDN", "00A5:Tape Synchronising count down"),
    166 : ("BUFPNT", "00A6:Pointer: Tape I/O buffer"),
    167 : ("INBIT", "00A7:RS232 temporary for received Bit/Tape"),
    168 : ("BITC1", "00A8:RS232 Input Bit count/Tape temporary"),
    169 : ("RINONE", "00A9:RS232 Flag: Start Bit check/Tape temporary"),
    170 : ("RIDATA", "00AA:RS232 Input Byte Buffer/Tape temporary"),
    171 : ("RIPRTY", "00AB:RS232 Input parity/Tape temporary"),
    172 : ("SAL", "00AC:Pointer: Tape Buffer/Screen scrolling"),
    174 : ("EAL", "00AE:Tape End Address/End of Program"),
    176 : ("CMPO", "00B0:Tape timing Constants"),
    178 : ("TAPE1", "00B2:Pointer: Start Address of Tape Buffer ($033C)"),
    180 : ("BITTS", "00B4:RS232 Write bit count/Tape Read timing Flag"),
    181 : ("NXTBIT", "00B5:RS232 Next Bit to send/Tape Read - End of Tape"),
    182 : ("RODATA", "00B6:RS232 Output Byte Buffer/Tape Read Error Flag"),
    183 : ("FNLEN", "00B7:Number of Characters in Filename"),
    184 : ("LA", "00B8:Current File - Logical File number"),
    185 : ("SA", "00B9:Current File - Secondary Address"),
    186 : ("FA", "00BA:Current File - First Address (Device number)"),
    187 : ("FNADR", "00BB:Pointer: Current File name Address"),
    189 : ("ROPRTY", "00BD:RS232 Output Parity/Tape Byte to be Input or Output"),
    190 : ("FSBLK", "00BE:Tape Input/Output Block count"),
    191 : ("MYCH", "00BF:Serial Word Buffer"),
    192 : ("CAS1", "00C0:Tape Motor Switch"),
    193 : ("STAL", "00C1:Start Address for LOAD and Cassette Write"),
    195 : ("MEMUSS", "00C3:Pointer: Type 3 Tape LOAD and general use"),
    197 : ("LSTX", "00C5:Matrix value of last Key pressed; No Key = $40"),
    198 : ("NDX", "00C6:Number of Characters in Keyboard Buffer queue"),
    199 : ("RVS", "00C7:Flag: Reverse On/Off; On = $01, Off = $00"),
    200 : ("INDX", "00C8:Pointer: End of Line for Input"),
    201 : ("LXSP", "00C9:Cursor X/Y (Line/Column) position at start of Input"),
    203 : ("SFDX", "00CB:Flag: Print shifted Characters"),
    204 : ("BLNSW", "00CC:Flag: Cursor blink; $00 = Enabled, $01 = Disabled"),
    205 : ("BLNCT", "00CD:Timer: Count down for Cursor blink toggle"),
    206 : ("GDBLN", "00CE:Character under Cursor while Cursor Inverted"),
    207 : ("BLNON", "00CF:Flag: Cursor Status; $00 = Off, $01 = On"),
    208 : ("CRSW", "00D0:Flag: Input from Screen = $03, or Keyboard = $00"),
    209 : ("PNT", "00D1:Pointer: Current Screen Line Address"),
    211 : ("PNTR", "00D3:Cursor Column on current Line, including Wrap-round Line, if any"),
    212 : ("QTSW", "00D4:Flag: Editor in Quote Mode; $00 = Not"),
    213 : ("LNMX", "00D5:Current logical Line length: 39 or 79"),
    214 : ("TBLX", "00D6:Current Screen Line number of Cursor"),
    215 : ("SCHAR", "00D7:Screen value of current Input Character/Last Character Output"),
    216 : ("INSRT", "00D8:Count of number of inserts outstanding"),
    217 : ("LDTB1", "00D9:Screen Line link Table/Editor temporaries"),
    243 : ("USER", "00F3:Pointer: Current Colour RAM Location"),
    245 : ("KEYTAB", "00F5:Vector: Current Keyboard decoding Table ($EB81)"),
    247 : ("RIBUF", "00F7:RS232 Input Buffer Pointer"),
    249 : ("ROBUF", "00F9:RS232 Output Buffer Pointer"),
    251 : ("FREKZP", "00FB:Free Zero Page space for User Programs"),
    255 : ("BASZPT", "00FF:BASIC temporary Data Area"),
    255 : ("ASCWRK", "00FF:Assembly Area for Floating point to ASCII conversion"),
    601 : ("LAT", "0259:Kernal Table: Active logical File numbers"),
    611 : ("FAT", "0263:Kernal Table: Active File First Addresses"),
    621 : ("SAT", "026D:Kernal Table: Active File Secondary Addresses"),
    631 : ("KEYD", "0277:Keyboard Buffer Queue (FIFO)"),
    641 : ("MEMSTR", "0281:Pointer: Bottom of Memory for Operating System ($0800)"),
    643 : ("MEMSIZ", "0283:Pointer: Top of Memory for Operating System ($A000)"),
    645 : ("TIMOUT", "0285:Serial IEEE Bus timeout defeat Flag"),
    646 : ("COLOR", "0286:Current Character Colour code"),
    647 : ("GDCOL", "0287:Background Colour under Cursor"),
    648 : ("HIBASE", "0288:High Byte of Screen Memory Address ($04)"),
    649 : ("XMAX", "0289:Maximum number of Bytes in Keyboard Buffer ($0A)"),
    650 : ("RPTFLG", "028A:Flag: Repeat keys setting"),
    651 : ("KOUNT", "028B:Repeat Key: Speed Counter ($04)"),
    652 : ("DELAY", "028C:Repeat Key: First repeat delay Counter ($10)"),
    653 : ("SHFLAG", "028D:flags for shift, CBM, CTRL"),
    654 : ("LSTSHF", "028E:Last Shift Key used for debouncing"),
    655 : ("KEYLOG", "028F:Vector: Routine to determine Keyboard table to use"),
    657 : ("MODE", "0291:Flag: Upper/Lower Case change"),
    658 : ("AUTODN", "0292:Flag: Auto scroll down: $00 = Disabled ($00)"),
    659 : ("M51CTR", "0293:RS232 Pseudo 6551 control Register Image"),
    660 : ("M51CDR", "0294:RS232 Pseudo 6551 command Register Image"),
    661 : ("M51AJB", "0295:RS232 Non-standard Bits/Second"),
    663 : ("RSSTAT", "0297:RS232 Pseudo 6551 Status Register Image"),
    664 : ("BITNUM", "0298:RS232 Number of Bits left to send"),
    665 : ("BAUDOF", "0299:RS232 Baud Rate; Full Bit time microseconds"),
    667 : ("RIDBE", "029B:RS232 Index to End of Input Buffer"),
    668 : ("RIDBS", "029C:RS232 Pointer: High Byte of Address of Input Buffer"),
    669 : ("RODBS", "029D:RS232 Pointer: High Byte of Address of Output Buffer"),
    670 : ("RODBE", "029E:RS232 Index to End of Output Buffer"),
    671 : ("IRQTMP", "029F:Temporary store for IRQ Vector during Tape operations"),
    673 : ("ENABL", "02A1:RS232 Enables"),
    674 : ("TODSNS", "02A2:TOD sense during Tape I/O"),
    675 : ("TRDTMP", "02A3:Temporary storage during Tape READ"),
    676 : ("TD1IRQ", "02A4:Temporary D1IRQ Indicator during Tape READ"),
    677 : ("TLNIDX", "02A5:Temporary for Line Index"),
    678 : ("TVSFLG", "02A6:Flag: TV Standard: $00 = NTSC, $01 = PAL"),
    788 : ("CINV", "0314:Vector: Hardware IRQ Interrupt ($EA31)"),
    790 : ("CNBINV", "0316:Vector: BRK Instruction Interrupt ($FE66)"),
    792 : ("NMINV", "0318:Vector: Hardware NMI Interrupt ($FE47)"),
    794 : ("IOPEN", "031A:Vector: Kernal OPEN Routine ($F34A)"),
    796 : ("ICLOSE", "031C:Vector: Kernal CLOSE Routine ($F291)"),
    798 : ("ICHKIN", "031E:Vector: Kernal CHKIN Routine ($F20E)"),
    800 : ("ICKOUT", "0320:Vector: Kernal CHKOUT Routine ($F250)"),
    802 : ("ICLRCH", "0322:Vector: Kernal CLRCHN Routine ($F333)"),
    804 : ("IBASIN", "0324:Vector: Kernal CHRIN Routine ($F157)"),
    806 : ("IBSOUT", "0326:Vector: Kernal CHROUT Routine ($F1CA)"),
    808 : ("ISTOP", "0328:Vector: Kernal STOP Routine ($F6ED)"),
    810 : ("IGETIN", "032A:Vector: Kernal GETIN Routine ($F13E)"),
    812 : ("ICLALL", "032C:Vector: Kernal CLALL Routine ($F32F)"),
    814 : ("USRCMD", "032E:User Defined Vector ($FE66)"),
    816 : ("ILOAD", "0330:Vector: Kernal LOAD Routine ($F4A5)"),
    818 : ("ISAVE", "0332:Vector: Kernal SAVE Routine ($F5ED)"),
    828 : ("TBUFFR", "033C:start of Tape I/O Buffer"),
    1024 : ("VICSCN", "0400:start of Default Screen Video Matrix")
}

rombasic_labels = {
    40960 : ("", "a000:Cold Start Vector"),
    40962 : ("", "a002:Warm Start Vector"),
    41866 : ("fndfor", "a38a:Find FOR/GOSUB Entry on Stack"),
    41912 : ("bltu", "a3b8:Open Space in Memory"),
    41979 : ("getstk", "a3fb:Check Stack Depth"),
    41992 : ("reason", "a408:Check Memory Overlap"),
    42037 : ("omerr", "a435:Output ?OUT OF MEMORY Error"),
    42039 : ("error", "a437:Error Routine"),
    42089 : ("errfin", "a469:Break Entry"),
    42100 : ("ready", "a474:Restart BASIC"),
    42112 : ("main", "a480:Input & Identify BASIC Line"),
    42140 : ("main1", "a49c:Get Line Number & Tokenise Text"),
    42146 : ("inslin", "a4a2:Insert BASIC Text"),
    42291 : ("linkprg", "a533:Rechain Lines"),
    42336 : ("inlin", "a560:Input Line Into Buffer"),
    42361 : ("crunch", "a579:Tokenise Input Buffer"),
    42515 : ("fndlin", "a613:Search for Line Number"),
    42562 : ("scrtch", "a642:Perform [new]"),
    42590 : ("clear", "a65e:Perform [clr]"),
    42638 : ("stxpt", "a68e:Reset TXTPTR"),
    42652 : ("list", "a69c:Perform [list]"),
    42775 : ("qplop", "a717:Handle LIST Character"),
    42818 : ("for", "a742:Perform [for]"),
    42926 : ("newstt", "a7ae:BASIC Warm Start"),
    42948 : ("ckeol", "a7c4:Check End of Program"),
    42977 : ("gone", "a7e1:Prepare to execute statement"),
    42989 : ("gone3", "a7ed:Perform BASIC Keyword"),
    43037 : ("restor", "a81d:Perform [restore]"),
    43052 : ("stop", "a82c:Perform [stop], [end], break"),
    43095 : ("cont", "a857:Perform [cont]"),
    43121 : ("run", "a871:Perform [run]"),
    43139 : ("gosub", "a883:Perform [gosub]"),
    43168 : ("goto", "a8a0:Perform [goto]"),
    43218 : ("return", "a8d2:Perform [return]"),
    43256 : ("data", "a8f8:Perform [data]"),
    43270 : ("datan", "a906:Search for Next Statement / Line"),
    43304 : ("if", "a928:Perform [if]"),
    43323 : ("rem", "a93b:Perform [rem]"),
    43339 : ("ongoto", "a94b:Perform [on]"),
    43371 : ("linget", "a96b:Fetch linnum From BASIC"),
    43429 : ("let", "a9a5:Perform [let]"),
    43460 : ("putint", "a9c4:Assign Integer"),
    43478 : ("ptflpt", "a9d6:Assign Floating Point"),
    43481 : ("putstr", "a9d9:Assign String"),
    43491 : ("puttim", "a9e3:Assign TI$"),
    43564 : ("getspt", "aa2c:Add Digit to FAC#1"),
    43648 : ("printn", "aa80:Perform [print]#"),
    43654 : ("cmd", "aa86:Perform [cmd]"),
    43674 : ("strdon", "aa9a:Print String From Memory"),
    43680 : ("print", "aaa0:Perform [print]"),
    43704 : ("varop", "aab8:Output Variable"),
    43735 : ("crdo", "aad7:Output CR/LF"),
    43752 : ("comprt", "aae8:Handle comma, TAB(, SPC("),
    43806 : ("strout", "ab1e:Output String"),
    43835 : ("outspc", "ab3b:Output Format Character"),
    43853 : ("doagin", "ab4d:Handle Bad Data"),
    43899 : ("get", "ab7b:Perform [get]"),
    43941 : ("inputn", "aba5:Perform [input#]"),
    43967 : ("input", "abbf:Perform [input]"),
    44010 : ("bufful", "abea:Read Input Buffer"),
    44025 : ("qinlin", "abf9:Do Input Prompt"),
    44038 : ("read", "ac06:Perform [read]"),
    44085 : ("rdget", "ac35:General Purpose Read Routine"),
    44318 : ("next", "ad1e:Perform [next]"),
    44385 : ("donext", "ad61:Check Valid Loop"),
    44426 : ("frmnum", "ad8a:Confirm Result"),
    44446 : ("frmevl", "ad9e:Evaluate Expression in Text"),
    44675 : ("eval", "ae83:Evaluate Single Term"),
    44717 : ("qdot", "aead:Continue Expression"),
    44785 : ("parchk", "aef1:Expression in Brackets"),
    44791 : ("chkcls", "aef7:Confirm Character"),
    44791 : ("", "aef7:test ')'-"),
    44794 : ("", "aefa:test '('-"),
    44797 : ("", "aefd:test comma-"),
    44808 : ("synerr", "af08:Output ?SYNTAX Error"),
    44813 : ("domin", "af0d:Set up NOT Function"),
    44820 : ("rsvvar", "af14:Identify Reserved Variable"),
    44840 : ("isvar", "af28:Search for Variable"),
    44872 : ("tisasc", "af48:Convert TI to ASCII String"),
    44967 : ("isfun", "afa7:Identify Function Type"),
    44977 : ("strfun", "afb1:Evaluate String Function"),
    45009 : ("numfun", "afd1:Evaluate Numeric Function"),
    45030 : ("orop", "afe6:Perform [or], [and]"),
    45078 : ("dorel", "b016:Perform <, =, >"),
    45083 : ("numrel", "b01b:Numeric Comparison"),
    45102 : ("strrel", "b02e:String Comparison"),
    45182 : ("dim", "b07e:Perform [dim]"),
    45195 : ("ptrget", "b08b:Identify Variable"),
    45287 : ("ordvar", "b0e7:Locate Ordinary Variable"),
    45341 : ("notfns", "b11d:Create New Variable"),
    45352 : ("notevl", "b128:Create Variable"),
    45460 : ("aryget", "b194:Allocate Array Pointer Space"),
    45482 : ("facinx", "b1aa:FAC#1 to Integer in (AC/YR)"),
    45490 : ("intidx", "b1b2:Evaluate Text for Integer"),
    45503 : ("ayint", "b1bf:FAC#1 to Positive Integer"),
    45521 : ("isary", "b1d1:Get Array Parameters"),
    45592 : ("fndary", "b218:Find Array"),
    45637 : ("bserr", "b245:?BAD SUBSCRIPT/?ILLEGAL QUANTITY"),
    45665 : ("notfdd", "b261:Create Array"),
    45838 : ("inlpn2", "b30e:Locate Element in Array"),
    45900 : ("umult", "b34c:Number of Bytes in Subscript"),
    45949 : ("fre", "b37d:Perform [fre]"),
    45969 : ("givayf", "b391:Convert Integer in (AC/YR) to Flpt"),
    45982 : ("pos", "b39e:Perform [pos]"),
    45990 : ("errdir", "b3a6:Confirm Program Mode"),
    46049 : ("getfnm", "b3e1:Check Syntax of FN"),
    46068 : ("fndoer", "b3f4:Perform [fn]"),
    46181 : ("strd", "b465:Perform [str$]"),
    46215 : ("strlit", "b487:Set Up String"),
    46293 : ("putnw1", "b4d5:Save String Descriptor"),
    46324 : ("getspa", "b4f4:Allocate Space for String"),
    46374 : ("garbag", "b526:Garbage Collection"),
    46525 : ("dvars", "b5bd:Search for Next String"),
    46598 : ("grbpas", "b606:Collect a String"),
    46653 : ("cat", "b63d:Concatenate Two Strings"),
    46714 : ("movins", "b67a:Store String in High RAM"),
    46755 : ("frestr", "b6a3:Perform String Housekeeping"),
    46811 : ("frefac", "b6db:Clean Descriptor Stack"),
    46828 : ("chrd", "b6ec:Perform [chr$]"),
    46848 : ("leftd", "b700:Perform [left$]"),
    46892 : ("rightd", "b72c:Perform [right$]"),
    46903 : ("midd", "b737:Perform [mid$]"),
    46945 : ("pream", "b761:Pull sTring Parameters"),
    46972 : ("len", "b77c:Perform [len]"),
    46978 : ("len1", "b782:Exit String Mode"),
    46987 : ("asc", "b78b:Perform [asc]"),
    47003 : ("gtbytc", "b79b:Evaluate Text to 1 Byte in XR"),
    47021 : ("val", "b7ad:Perform [val]"),
    47029 : ("strval", "b7b5:Convert ASCII String to Flpt"),
    47083 : ("getnum", "b7eb:Get parameters for POKE/WAIT"),
    47095 : ("getadr", "b7f7:Convert FAC#1 to Integer in LINNUM"),
    47117 : ("peek", "b80d:Perform [peek]"),
    47140 : ("poke", "b824:Perform [poke]"),
    47149 : ("wait", "b82d:Perform [wait]"),
    47177 : ("faddh", "b849:Add 0.5 to FAC#1"),
    47184 : ("fsub", "b850:Perform Subtraction"),
    47202 : ("fadd5", "b862:Normalise Addition"),
    47207 : ("fadd", "b867:Perform Addition"),
    47431 : ("negfac", "b947:2's Complement FAC#1"),
    47486 : ("overr", "b97e:Output ?OVERFLOW Error"),
    47491 : ("mulshf", "b983:Multiply by Zero Byte"),
    47594 : ("log", "b9ea:Perform [log]"),
    47656 : ("fmult", "ba28:Perform Multiply"),
    47705 : ("mulply", "ba59:Multiply by a Byte"),
    47756 : ("conupk", "ba8c:Load FAC#2 From Memory"),
    47799 : ("muldiv", "bab7:Test Both Accumulators"),
    47828 : ("mldvex", "bad4:Overflow / Underflow"),
    47842 : ("mul10", "bae2:Multiply FAC#1 by 10"),
    47870 : ("div10", "bafe:Divide FAC#1 by 10"),
    47879 : ("fdiv", "bb07:Divide FAC#2 by Flpt at (AC/YR)"),
    47887 : ("fdivt", "bb0f:Divide FAC#2 by FAC#1"),
    48034 : ("movfm", "bba2:Load FAC#1 From Memory"),
    48071 : ("mov2f", "bbc7:Store FAC#1 in Memory"),
    48124 : ("movfa", "bbfc:Copy FAC#2 into FAC#1"),
    48140 : ("movaf", "bc0c:Copy FAC#1 into FAC#2"),
    48155 : ("round", "bc1b:Round FAC#1"),
    48171 : ("sign", "bc2b:Check Sign of FAC#1"),
    48185 : ("sgn", "bc39:Perform [sgn]"),
    48216 : ("abs", "bc58:Perform [abs]"),
    48219 : ("fcomp", "bc5b:Compare FAC#1 With Memory"),
    48283 : ("qint", "bc9b:Convert FAC#1 to Integer"),
    48332 : ("int", "bccc:Perform [int]"),
    48371 : ("fin", "bcf3:Convert ASCII String to a Number in FAC#1"),
    48578 : ("inprt", "bdc2:Output 'IN' and Line Number"),
    48605 : ("fout", "bddd:Convert FAC#1 to ASCII String"),
    48744 : ("foutim", "be68:Convert TI to String"),
    49009 : ("sqr", "bf71:Perform [sqr]"),
    49019 : ("fpwrt", "bf7b:Perform power ($)"),
    49076 : ("negop", "bfb4:Negate FAC#1"),
    49133 : ("exp", "bfed:Perform [exp] (continued in KERNAL)")
}

rambasic_labels = {
    3 : ("ADRAY1", "0003:Jump Vector: Convert FAC to Integer in (A/Y) ($B1AA)"),
    5 : ("ADRAY2", "0005:Jump Vector: Convert int in (A/Y) to float in (FAC) ($B391)"),
    7 : ("CHARAC", "0007:Search Character/Temporary Integer during INT"),
    8 : ("ENDCHR", "0008:Flag: Scan for Quote at end of String"),
    7 : ("INTEGR", "0007:Temporary Integer during OR/AND"),
    9 : ("TRMPOS", "0009:Screen Column for last TAB"),
    10 : ("VERCK", "000A:Flag: 0 = Load, 1 = Verify"),
    11 : ("COUNT", "000B:Input Buffer Pointer/Number of Subscripts"),
    12 : ("DIMFLG", "000C:Flag: Default Array dimension"),
    13 : ("VALTYP", "000D:Data type Flag: $00 = Numeric, $FF = String"),
    14 : ("INTFLG", "000E:Data type Flag: $00 = Floating point, $80 = Integer"),
    15 : ("GARBFL", "000F:Flag: DATA scan/List Quote/Garbage collection"),
    16 : ("SUBFLG", "0010:Flag: Subscript reference/User Function call"),
    17 : ("INPFLG", "0011:Input Flag: $00 = INPUT, $40 = GET, $98 = READ"),
    18 : ("TANSGN", "0012:Flag: TAN sign/Comparative result"),
    19 : ("CHANNL", "0013:File number of current Input Device"),
    20 : ("LINNUM", "0014:Temporary: Integer value"),
    22 : ("TEMPPT", "0016:Pointer: Temporary String Stack"),
    23 : ("LASTPT", "0017:Last temporary String Address"),
    25 : ("TEMPST", "0019:Stack for temporary Strings"),
    34 : ("INDEX", "0022:Utility Pointer Area"),
    34 : ("INDEX1", "0022:First Utility Pointer"),
    36 : ("INDEX2", "0024:Secong Utility Pointer"),
    38 : ("RESHO", "0026:Floating point product of Multiply and Divide"),
    43 : ("TXTTAB", "002B:Pointer: Start of BASIC Text Area ($0801)"),
    45 : ("VARTAB", "002D:Pointer: Start of BASIC Variables"),
    47 : ("ARYTAB", "002F:Pointer: Start of BASIC Arrays"),
    49 : ("STREND", "0031:Pointer: End of BASIC Arrays + 1"),
    51 : ("FRETOP", "0033:Pointer: Bottom of String space"),
    53 : ("FRESPC", "0035:Utility String Pointer"),
    55 : ("MEMSIZ", "0037:Pointer: Highest Address available to BASIC ($A000)"),
    57 : ("CURLIN", "0039:Current BASIC Line number"),
    59 : ("OLDLIN", "003B:Previous BASIC Line number"),
    61 : ("OLDTXT", "003D:Pointer: BASIC Statement for CONT"),
    63 : ("DATLIN", "003F:Current DATA Line number"),
    65 : ("DATPTR", "0041:Pointer: Used by READ - current DATA Item Address"),
    67 : ("INPPTR", "0043:Pointer: Temporary storage of Pointer during INPUT Routine"),
    69 : ("VARNAM", "0045:Name of Variable being sought in Variable Table"),
    71 : ("VARPNT", "0047:Pointer: to value of (VARNAM) if Integer, to descriptor if String"),
    73 : ("FORPNT", "0049:Pointer: Index Variable for FOR/NEXT loop"),
    75 : ("VARTXT", "004B:Temporary storage for TXTPTR during READ, INPUT and GET"),
    77 : ("OPMASK", "004D:Mask used during FRMEVL"),
    78 : ("TEMPF3", "004E:Temporary storage for FLPT value"),
    83 : ("FOUR6", "0053:Length of String Variable during Garbage collection"),
    84 : ("JMPER", "0054:Jump Vector used in Function Evaluation"),
    87 : ("TEMPF1", "0057:Temporary storage for FLPT value"),
    92 : ("TEMPF2", "005C:Temporary storage for FLPT value"),
    97 : ("FAC", "0061:Main Floating point Accumulator"),
    97 : ("FACEXP", "0061:FAC Exponent"),
    98 : ("FACHO", "0062:FAC Mantissa"),
    102 : ("FACSGN", "0066:FAC Sign"),
    103 : ("SGNFLG", "0067:Pointer: Series Evaluation Constant"),
    104 : ("BITS", "0068:Bit Overflow Area during normalisation Routine"),
    105 : ("AFAC", "0069:Auxiliary Floating point Accumulator"),
    105 : ("ARGEXP", "0069:AFAC Exponent"),
    106 : ("ARGHO", "006A:AFAC Mantissa"),
    110 : ("ARGSGN", "006E:AFAC Sign"),
    111 : ("ARISGN", "006F:Sign of result of Arithmetic Evaluation"),
    112 : ("FACOV", "0070:FAC low-order rounding"),
    113 : ("FBUFPT", "0071:Pointer: Used during CRUNCH/ASCII conversion"),
    115 : ("CHRGET", "0073:Subroutine: Get next Byte of BASIC Text"),
    121 : ("CHRGOT", "0079:Entry to Get same Byte again"),
    122 : ("TXTPTR", "007A:Pointer: Current Byte of BASIC Text"),
    139 : ("RNDX", "008B:Floating RND Function Seed Value"),
    319 : ("BSTACK", "013F:BASIC Stack Area"),
    512 : ("BUF", "0200:BASIC Input Buffer (Input Line from Screen)"),
    768 : ("IERROR", "0300:Vector: BASIC Error ($E38B)"),
    770 : ("IMAIN", "0302:Vector: BASIC Input Line ($A483)"),
    772 : ("ICRNCH", "0304:Vector: BASIC Tokenise ($A57C)"),
    774 : ("IQPLOP", "0306:Vector: BASIC LIST ($A71A)"),
    776 : ("IGONE", "0308:Vector: BASIC Character ($A7E4)"),
    778 : ("IEVAL", "030A:Vector: BASIC Token ($AE86)"),
    780 : ("SAREG", "030C:Storage for 6510 Accumulator during SYS"),
    781 : ("SXREG", "030D:Storage for 6510 X-Register during SYS"),
    782 : ("SYREG", "030E:Storage for 6510 Y-Register during SYS"),
    783 : ("SPREG", "030F:Storage for 6510 Status Register during SYS"),
    784 : ("USRPOK", "0310:USR Function JMP Instruction ($4C)"),
    785 : ("USRADD", "0311:USR Address ($LB,$MB)")
}

ioregs_labels = {
    0 : ("D6510", "6510 On-Chip I/O DATA Direction Register"),
    1 : ("R6510", "ROM/IO banking and cassette I/O"),
    53248 : ("SPOX", "D000:Sprite 0 X Pos"),
    53249 : ("SPOY", "D001:Sprite 0 Y Pos"),
    53250 : ("SP1X", "D002:Sprite 1 X Pos"),
    53251 : ("SP1Y", "D003:Sprite 1 Y Pos"),
    53252 : ("SP2X", "D004:Sprite 2 X Pos"),
    53253 : ("SP2Y", "D005:Sprite 2 Y Pos"),
    53254 : ("SP3X", "D006:Sprite 3 X Pos"),
    53255 : ("SP3Y", "D007:Sprite 3 Y Pos"),
    53256 : ("SP4X", "D008:Sprite 4 X Pos"),
    53257 : ("SP4Y", "D009:Sprite 4 Y Pos"),
    53258 : ("SP5X", "D00A:Sprite 5 X Pos"),
    53259 : ("SP5Y", "D00B:Sprite 5 Y Pos"),
    53260 : ("SP6X", "D00C:Sprite 6 X Pos"),
    53261 : ("SP6Y", "D00D:Sprite 6 Y Pos"),
    53262 : ("SP7X", "D00E:Sprite 7 X Pos"),
    53263 : ("SP7Y", "D00F:Sprite 7 Y Pos"),
    53264 : ("MSIGX", "D010:Sprites 0-7 X Pos (msb of X coord.)"),
    53265 : ("SCROLY", "D011:VIC Control Register"),
    53266 : ("RASTER", "D012:Read Raster / Write Raster Value for Compare"),
    53267 : ("LPENX", "D013:Light-Pen Latch X Pos"),
    53268 : ("LPENY", "D014:Light-Pen Latch Y Pos"),
    53269 : ("SPENA", "D015:Sprite display Enable: 1 = Enable"),
    53270 : ("SCROLX", "D016:VIC Control Register"),
    53271 : ("YXPAND", "D017:Sprites O-7 Expand 2x Vertical (Y)"),
    53272 : ("VMCSB", "D018:VIC Memory Control Register"),
    53273 : ("VICIRQ", "D019:VIC Interrupt Flag Register"),
    53274 : ("IRQMSK", "D01A:IRQ Mask Register: 1 = Interrupt Enabled"),
    53275 : ("SPBGPR", "D01B:Sprite to Background Display Priority"),
    53276 : ("SPMC", "D01C:Sprites O-7 Multi-Color Mode Select"),
    53277 : ("XXPAND", "D01D:Sprites 0-7 Expand 2x Horizontal (X)"),
    53278 : ("SPSPCL", "D01E:Sprite to Sprite Collision Detect"),
    53279 : ("SPBGCL", "D01F:Sprite to Background Collision Detect"),
    53280 : ("EXTCOL", "D020:Border Color"),
    53281 : ("BGCOL0", "D021:Background Color 0"),
    53282 : ("BGCOL1", "D022:Background Color 1"),
    53283 : ("BGCOL2", "D023:Background Color 2"),
    53284 : ("BGCOL3", "D024:Background Color 3"),
    53285 : ("SPMC0", "D025:Sprite Multi-Color Register 0"),
    53286 : ("SPMC1", "D026:Sprite Multi-Color Register 1"),
    53287 : ("SP0CL", "D027:Sprite 0 Color"),
    53288 : ("SP1CL", "D028:Sprite 1 Color"),
    53289 : ("SP2CL", "D029:Sprite 2 Color"),
    53290 : ("SP3CL", "D02A:Sprite 3 Color"),
    53291 : ("SP4CL", "D02B:Sprite 4 Color"),
    53292 : ("SP5CL", "D02C:Sprite 5 Color"),
    53293 : ("SP6CL", "D02D:Sprite 6 Color"),
    53294 : ("SP7CL", "D02E:Sprite 7 Color"),
    54272 : ("FRELO1", "D400:Voice 1: Frequency Control - Low-Byte"),
    54273 : ("FREHI1", "D401:Voice 1: Frequency Control - High-Byte"),
    54274 : ("PWLO1", "D402:Voice 1: Pulse Waveform Width - Low-Byte"),
    54275 : ("PWHI1", "D403:Voice 1: Pulse Waveform Width - High-Nybble"),
    54276 : ("VCREG1", "D404:Voice 1: Control Register"),
    54277 : ("ATDCY1", "D405:Envelope Generator 1: Attack / Decay Cycle"),
    54278 : ("SUREL1", "D406:Envelope Generator 1: Sustain / Release Cycle"),
    54279 : ("FRELO2", "D407:Voice 2: Frequency Control - Low-Byte"),
    54280 : ("FREHI2", "D408:Voice 2: Frequency Control - High-Byte"),
    54281 : ("PWLO2", "D409:Voice 2: Pulse Waveform Width - Low-Byte"),
    54282 : ("PWHI2", "D40A:Pulse Waveform Width - High-Nybble"),
    54283 : ("VCREG2", "D40B:Voice 2: Control Register"),
    54284 : ("ATDCY2", "D40C:Envelope Generator 2: Attack / Decay Cycle"),
    54285 : ("SUREL2", "D40D:Envelope Generator 2: Sustain / Release Cycle Control"),
    54286 : ("FRELO3", "D40E:Voice 3: Frequency Control - Low-Byte"),
    54287 : ("FREHI3", "D40F:Voice 3: Frequency Control - High-Byte"),
    54288 : ("PWLO3", "D410:Voice 3: Pulse Waveform Width - Low-Byte"),
    54289 : ("PWHI3", "D411:Voice 3: Pulse Waveform Width - High-Nybble"),
    54290 : ("VCREG3", "D412:Voice 3: Control Register"),
    54291 : ("ATDCY3", "D413:Envelope Generator 3: Attack/Decay Cycle Control"),
    54285 : ("SUREL3", "D414:Envelope Generator 3: Sustain / Release Cycle Control"),
    54293 : ("CUTLO", "D415:Filter Cutoff Frequency: Low-Nybble"),
    54294 : ("CUTHI", "D416:Filter Cutoff Frequency: High-Byte"),
    54295 : ("RESON", "D417:Filter Resonance Control / Voice Input"),
    54296 : ("SIGVOL", "D418:Select Filter Mode and Volume"),
    54297 : ("POTX", "D419:Analog/Digital Converter: Game Paddle 1"),
    54298 : ("POTY", "D41A:Analog/Digital Converter Game Paddle 2"),
    54299 : ("RANDOM", "D41B:Oscillator 3 Random Number Generator"),
    54230 : ("ENV3", "D41C:Envelope Generator 3 Output"),
    55296 : ("", "D800:Start of Color RAM"),
    56320 : ("CIAPRA", "DC00:cia1: Data Port A (Keyboard, Joystick, Paddles, Light-Pen)"),
    56321 : ("CIAPRB", "DC01:cia1: Data Port B (Keyboard, Joysticks, Paddles)"),
    56322 : ("CIDDRA", "DC02:cia1: Data Direction Register - Port A (56320)"),
    56323 : ("CIDDRB", "DC03:cia1: Data Direction Register - Port B (56321)"),
    56324 : ("TIMALO", "DC04:cia1: Timer A: Low-Byte"),
    56325 : ("TIMAHI", "DC05:cia1: Timer A: High-Byte"),
    56326 : ("TIMBLO", "DC06:cia1: Timer B: Low-Byte"),
    56327 : ("TIMBHI", "DC07:cia1: Timer B: High-Byte"),
    56328 : ("TODTEN", "DC08:cia1: Time-of-Day Clock: 1/10 Seconds"),
    56329 : ("TODSEC", "DC09:cia1: Time-of-Day Clock: Seconds"),
    56330 : ("TODMIN", "DC0A:cia1: Time-of-Day Clock: Minutes"),
    56331 : ("TODHRS", "DC0B:cia1: Time-of-Day Clock: Hours + AM/PM Flag (Bit 7)"),
    56332 : ("CIASDR", "DC0C:cia1: Synchronous Serial I/O Data Buffer"),
    56333 : ("CIAICR", "DC0D:cia1: CIA Interrupt Control Register"),
    56334 : ("CIACRA", "DC0E:cia1: CIA Control Register A"),
    56335 : ("CIACRB", "DC0F:cia1: CIA Control Register B"),
    56576 : ("CI2PRA", "DD00:cia2: Data Port A (Serial Bus RS-232, VIC Memory Control)"),
    56577 : ("CI2PRB", "DD01:cia2: Data Port B (User Port, RS-232)"),
    56578 : ("C2DDRA", "DD02:cia2: Data Direction Register - Port A"),
    56579 : ("C2DDRB", "DD03:cia2: Data Direction Register - Port B"),
    56580 : ("TI2ALO", "DD04:cia2: Timer A: Low-Byte"),
    56581 : ("TI2AHI", "DD05:cia2: Timer A: High-Byte"),
    56582 : ("TI2BLO", "DD06:cia2: Timer B: Low-Byte"),
    56583 : ("TI2BHI", "DD07:cia2: Timer B: High-Byte"),
    56584 : ("TO2TEN", "DD08:cia2: Time-of-Day Clock: 1/10 Seconds"),
    56585 : ("TO2SEC", "DD09:cia2: Time-of-Day Clock: Seconds"),
    56586 : ("TO2MIN", "DD0A:cia2: Time-of-Day Clock: Minutes"),
    56587 : ("TO2HRS", "DD0B:cia2: Time-of-Day Clock: Hours + AM/PM Flag (Bit 7)"),
    56588 : ("CI2SDR", "DD0C:cia2: Synchronous Serial I/O Data Buffer"),
    56589 : ("CI2ICR", "DD0D:cia2: CIA Interrupt Control Register (Read"),
    56590 : ("CI2CRA", "DD0E:cia2: CIA Control Register A"),
    56591 : ("CI2CRB", "DD0F:cia2: CIA Control Register B")
}

romio1541_labels = {
    6144 : ("", "1800:VIA1: port B serial bus"),
    6145 : ("", "1801:VIA1: port A. Read to ack interrupt from ATN IN going high"),
    6146 : ("", "1802:VIA1: port B data direction reg"),
    6147 : ("", "1803:VIA1: port A data direction reg"),
    6149 : ("", "1805:VIA1: Timer"),
    7168 : ("", "1C00:VIA2: PB, control port B"),
    7169 : ("", "1C01:VIA2: PA, port A (data to and from read/write head)"),
    7170 : ("", "1C02:VIA2: CB, data direction port B"),
    7171 : ("", "1C03:VIA2: A, data direction port A"),
    7172 : ("", "1C04: Timer low byte"),
    7173 : ("", "1C05: Timer high byte, write to start timer"),
    7174 : ("", "1C06: Timer starting value low byte"),
    7175 : ("", "1C07: Timer starting value high byte"),   
    7179 : ("", "1C0b: Timer control register"),
    7180 : ("", "1C0c: Auxiliary control register"),
    7181 : ("", "1C0d: Interrupt status register"),
    7182 : ("", "1C0e: Interrupt control register"),                         
    49408 : ("", "c100:Turn LED on for current drive"),
    49432 : ("", "c118:Turn LED on"),
    49443 : ("", "c123:Clear error flags"),
    49452 : ("", "c12c:Prepare for LED flash after error"),
    49478 : ("", "c146:Interpret command from computer"),
    49556 : ("", "c194:Prepare error msg after executing command"),
    49597 : ("", "c1bd:Erase input buffer"),
    49608 : ("", "c1c8:Output error msg (track and sector 0)"),
    49617 : ("", "c1d1:Check input line"),
    49637 : ("", "c1e5:Check ':' on input line"),
    49646 : ("", "c1ee:Check input line"),
    49768 : ("", "c268:Search character in input buffer"),
    49843 : ("", "c2b3:Check line length"),
    49884 : ("", "c2dc:Clear flags for command input"),
    49938 : ("", "c312:Preserve drive number"),
    49980 : ("", "c33c:Search for drive number"),
    50024 : ("", "c368:Get drive number"),
    50063 : ("", "c38f:Reverse drive number"),
    50072 : ("", "c398:Check given file type"),
    50109 : ("", "c3bd:Check given drive number"),
    50122 : ("", "c3ca:Verify drive number"),
    50255 : ("", "c44f:Search for file in directory"),
    50749 : ("", "c63d:Test and initalise drive"),
    50798 : ("", "c66e:Name of file in directory buffer"),
    50824 : ("", "c688:Copy filename to work buffer"),
    50854 : ("", "c6a6:Search for end of name in command"),
    51116 : ("", "c7ac:Clear Directory Output Buffer"),
    51127 : ("", "c7b7:Create header with disk name"),
    51206 : ("", "c806:Print 'blocks free.'"),
    51235 : ("", "c823:Perform [S] - Scratch command"),
    51325 : ("", "c87d:Erase file"),
    51382 : ("", "c8b6:Erase dir entry"),
    51393 : ("", "c8c1:Perform [D] - Backup command (Unused)"),
    51398 : ("", "c8c6:Format disk"),
    51440 : ("", "c8f0:Perform [C] - Copy command"),
    51848 : ("", "ca88:Perform [R] - Rename command"),
    51916 : ("", "cacc:Check if file present"),
    51960 : ("", "caf8:Perform [M] - Memory command"),
    52000 : ("", "cb20:M-R memory read"),
    52048 : ("", "cb50:M-W memory write"),
    52060 : ("", "cb5c:Perform [U] - User command"),
    52100 : ("", "cb84:Open direct access channel, number"),
    52251 : ("", "cc1b:Perform [B] - Block/Buffer command"),
    52323 : ("", "cc63:Block command vectors"),
    52335 : ("", "cc6f:Get parameters form block commands"),
    52469 : ("", "ccf5:B-F block free"),
    52483 : ("", "cd03:B-A block allocate"),
    52534 : ("", "cd36:Read block to buffer"),
    52540 : ("", "cd3c:Get byte from buffer"),
    52546 : ("", "cd42:Read block from disk"),
    52566 : ("", "cd56:B-R block read"),
    52575 : ("", "cd5f:U1, Block read without changing buffer pointer"),
    52595 : ("", "cd73:B-W block write"),
    52631 : ("", "cd97:U2, Block write without changing buffer pointer"),
    52643 : ("", "cda3:B-E block execute"),
    52669 : ("", "cdbd:B-P block pointer"),
    52690 : ("", "cdd2:Open channel"),
    52722 : ("", "cdf2:Check buffer number and open channel"),
    52750 : ("", "ce0e:Set pointer for REL file"),
    52846 : ("", "ce6e:Divide by 254"),
    52849 : ("", "ce71:Divide by 120"),
    52953 : ("", "ced9:Erase work storage"),
    52962 : ("", "cee2:Left shift 3-byte register twice"),
    52965 : ("", "cee5:Left shift 3-byte register once"),
    52973 : ("", "ceed:Add 3-byte registers"),
    53132 : ("", "cf8c:Change buffer"),
    53147 : ("", "cf9b:Write data in buffer"),
    53233 : ("", "cff1:Write data byte in buffer"),
    53253 : ("", "d005:Perform [I] - Initalise command"),
    53262 : ("", "d00e:Read BAM from disk"),
    53314 : ("", "d042:Load BAM"),
    53365 : ("", "d075:Calculate blocks free"),
    53443 : ("", "d0c3:Read block"),
    53447 : ("", "d0c7:Write block"),
    53483 : ("", "d0eb:Open channel for reading"),
    53511 : ("", "d107:Open channel for writing"),
    53541 : ("", "d125:Check for file type REL"),
    53551 : ("", "d12f:Get buffer and channel numbers"),
    53559 : ("", "d137:Get a byte from buffer"),
    53590 : ("", "d156:Get byte and read next block"),
    53661 : ("", "d19d:Write byte in buffer and block"),
    53702 : ("", "d1c6:Increment buffer pointer"),
    53715 : ("", "d1d3:Get drive number"),
    53727 : ("", "d1df:Find write channel and buffer"),
    53730 : ("", "d1e2:Find read channel and buffer"),
    53799 : ("", "d227:Close channel"),
    53850 : ("", "d25a:Free buffer"),
    53902 : ("", "d28e:Find buffer"),
    54023 : ("", "d307:Close all channels"),
    54035 : ("", "d313:Close all channels of other drives"),
    54143 : ("", "d37f:Find channel and allocate"),
    54171 : ("", "d39b:Get byte for output"),
    54349 : ("", "d44d:Read next block"),
    54368 : ("", "d460:Read block"),
    54372 : ("", "d464:Write block"),
    54389 : ("", "d475:Allocate buffer and read block"),
    54406 : ("", "d486:Allocate new block"),
    54413 : ("", "d48d:Write dir block"),
    54472 : ("", "d4c8:Set buffer pointer"),
    54490 : ("", "d4da:Close internal channel"),
    54504 : ("", "d4e8:Set buffer pointer"),
    54518 : ("", "d4f6:Get byte from buffer"),
    54534 : ("", "d506:Check track and sector numbers"),
    54610 : ("", "d552:Get track and sector numbers for current job"),
    54623 : ("", "d55f:Check for vaild track and sector numbers"),
    54642 : ("", "d572:DOS mismatch error"),
    54662 : ("", "d586:Read block"),
    54666 : ("", "d58a:Write block"),
    54681 : ("", "d599:Verify execution"),
    54694 : ("", "d5a6:Verify execution (without wait)"),
    54726 : ("", "d5c6:Additional attempts for read errors"),
    54902 : ("", "d676:Move head by half a track"),
    54931 : ("", "d693:Move head one track in or out"),
    54950 : ("", "d6a6:Attempt command execution multiple times"),
    54992 : ("", "d6d0:Transmit param to disk controller"),
    55012 : ("", "d6e4:Enter file in dir"),
    55220 : ("", "d7b4:OPEN command, secondary addr 15"),
    55239 : ("", "d7c7:Check '*' Last file"),
    55283 : ("", "d7f3:Check '$' Directory"),
    55317 : ("", "d815:Check '#' Channel"),
    55541 : ("", "d8f5:Open a file with overwriting (@)"),
    55712 : ("", "d9a0:Open file for reading"),
    55779 : ("", "d9e3:Open file for writing"),
    55817 : ("", "da09:Check file type and control mode"),
    55850 : ("", "da2a:Preparation for append"),
    55893 : ("", "da55:Open directory"),
    56000 : ("", "dac0:Close routine"),
    56066 : ("", "db02:Close file"),
    56162 : ("", "db62:Write last block"),
    56229 : ("", "dba5:Directory entry"),
    56390 : ("", "dc46:Read block, allocate buffer"),
    56502 : ("", "dcb6:Reset pointer"),
    56538 : ("", "dcda:Construct a new block"),
    56717 : ("", "dd8d:Write byte in side-sector block"),
    56725 : ("", "dd95:Manipulate flags"),
    56747 : ("", "ddab:Verify command code for writing"),
    56817 : ("", "ddf1:Write a block of a REL file"),
    56829 : ("", "ddfd:Write bytes for following track"),
    56844 : ("", "de0c:Get following track and sector numbers"),
    56857 : ("", "de19:Following track for last block"),
    56875 : ("", "de2b:buffer pointer to zero"),
    56891 : ("", "de3b:Get track and sector"),
    56981 : ("", "de95:Get following track and sector from buffer"),
    56997 : ("", "dea5:Copy buffer contents"),
    57025 : ("", "dec1:Erase buffer Y"),
    57042 : ("", "ded2:Get side-sector number"),
    57052 : ("", "dedc:Set buffer pointer to side-sector"),
    57065 : ("", "dee9:Buffer pointer for side-sector"),
    57080 : ("", "def8:Get side sector and buffer pointer"),
    57115 : ("", "df1b:Read side-sector"),
    57121 : ("", "df21:Write side-sector"),
    57157 : ("", "df45:Set buffer pointer in side-sector"),
    57164 : ("", "df4c:Calculate number of blocks in a REL file"),
    57190 : ("", "df66:Verify side-sector in buffer"),
    57235 : ("", "df93:Get buffer number"),
    57296 : ("", "dfd0:Get next record iin REL file"),
    57404 : ("", "e03c:Write block and read next block"),
    57468 : ("", "e07c:Write a byte in a record"),
    57515 : ("", "e0ab:Write byte in REL file"),
    57587 : ("", "e0f3:Fill record with 0s"),
    57605 : ("", "e105:Write buffer number in table"),
    57632 : ("", "e120:Get byte from REL file"),
    57803 : ("", "e1cb:Get last side-sector"),
    57863 : ("", "e207:Perform [P] - Position command"),
    58082 : ("", "e2e2:Divide data blocks into records"),
    58116 : ("", "e304:Set pointer to next record"),
    58140 : ("", "e31c:Expand side-sector"),
    58446 : ("", "e44e:Write side-sector and allocate new"),
    58890 : ("", "e60a:Prepare error number and message"),
    58949 : ("", "e645:Print error message into error buffer"),
    59008 : ("", "e680:TALK"),
    59016 : ("", "e688:LISTEN"),
    59035 : ("", "e69b:Convert BIN to 2-Ascii (error message buffer)"),
    59051 : ("", "e6ab:Convert BCD to 2-Ascii (error message buffer)"),
    59068 : ("", "e6bc:Write OK in buffer"),
    59073 : ("", "e6c1:Print error on track 00,00 to error buffer"),
    59079 : ("", "e6c7:Print error on current track to error buffer"),
    59142 : ("", "e706:Write error message string to buffer"),
    59220 : ("", "e754:Get character and in buffer"),
    59239 : ("", "e767:Get a char of the error message"),
    59253 : ("", "e775:Increment pointer"),
    59263 : ("", "e77f:Dummy subroutine"),
    59264 : ("", "e780:Check for auto start - removed"),
    59299 : ("", "e7a3:Perform [&] - USR file execute command"),
    59467 : ("", "e84b:Generate checksum"),
    59475 : ("", "e853:IRQ routine for serial bus"),
    59483 : ("", "e85b:Service the serial bus"),
    59657 : ("", "e909:Send data"),
    59804 : ("", "e99c:DATA OUT lo"),
    59813 : ("", "e9a5:DATA OUT hi"),
    59822 : ("", "e9ae:CLOCK OUT hi"),
    59831 : ("", "e9b7:CLOCK OUT lo"),
    59840 : ("", "e9c0:Read IEEE port"),
    59849 : ("", "e9c9:Get data byte from bus"),
    59890 : ("", "e9f2:Accept byte with EOI"),
    59950 : ("", "ea2e:Accept data from serial bus"),
    59993 : ("", "ea59:Test for ATN"),
    60014 : ("", "ea6e:Flash LED for hardware defects, self-test"),
    60064 : ("", "eaa0:Power-up RESET routine"),
    60415 : ("", "ebff:Wait loop"),
    60574 : ("", "ec9e:Load dir"),
    60761 : ("", "ed59:Transmit dir line"),
    60775 : ("", "ed67:Get byte from buffer"),
    60804 : ("", "ed84:Perform [V] - Validate command"),
    60901 : ("", "ede5:Allocate file blocks in BAM"),
    60941 : ("", "ee0d:Perform [N] - New (Format) command"),
    61111 : ("", "eeb7:Create BAM"),
    61172 : ("", "eef4:Write BAM if needed"),
    61242 : ("", "ef3a:Set buffer pointer for BAM"),
    61261 : ("", "ef4d:Get number of free blocks for dir"),
    61276 : ("", "ef5c:Mark block as free"),
    61320 : ("", "ef88:Set flag for BAM changed"),
    61328 : ("", "ef90:Mark block as allocated"),
    61391 : ("", "efcf:Erase bit for sector in BAM entry"),
    61425 : ("", "eff1:Write BAM after change"),
    61445 : ("", "f005:Erase BAM buffer"),
    61649 : ("", "f0d1:Crear BAM"),
    61711 : ("", "f10f:Get buffer number for BAM"),
    61721 : ("", "f119:Buffer number for BAM"),
    61726 : ("", "f11e:Find and allocate free block"),
    61865 : ("", "f1a9:Find free sector and allocate"),
    61946 : ("", "f1fa:Find free sectors in current track"),
    61984 : ("", "f220:Verify number of free blocks in BAM"),
    62027 : ("", "f24b:Establish number of sectors per track"),
    62040 : ("", "f258:Dummy subroutine"),
    62041 : ("", "f259:Initialise disk controller"),
    62128 : ("", "f2b0:IRQ routine for disk controller"),
    62201 : ("", "f2f9:Head transport"),
    62318 : ("", "f36e:Execute program in buffer"),
    62332 : ("", "f37c:Bump, find track 1 (head at stop)"),
    62355 : ("", "f393:Initialise pointer in buffer"),
    62385 : ("", "f3b1:Read block header, verify ID"),
    62480 : ("", "f410:Preserve block header"),
    62488 : ("", "f418:Work Return value 01 (OK) into queue"),
    62491 : ("", "f41b:Work Return value 0B (READ ERROR) into queue"),
    62494 : ("", "f41e:Work Return value 09 (READ ERROR) into queue"),
    62499 : ("", "f423:Job optimisation"),
    62666 : ("", "f4ca:Test command code further"),
    62673 : ("", "f4d1:Read sector"),
    62730 : ("", "f50a:Find start of data block"),
    62736 : ("", "f510:Read block header"),
    62806 : ("", "f556:Wait for SYNC"),
    62830 : ("", "f56e:Test command code further"),
    62837 : ("", "f575:Write data block to disk"),
    62953 : ("", "f5e9:Calculate parity for data buffer"),
    62962 : ("", "f5f2:Convert buffer of GCR data into binary"),
    63121 : ("", "f691:Test command code further"),
    63128 : ("", "f698:Compare written data with data on disk"),
    63178 : ("", "f6ca:Command code for find sector"),
    63184 : ("", "f6d0:Convert 4 binary bytes to 5 GCR bytes"),
    63359 : ("", "f77f:GCR (5-bit) nybble table"),
    63375 : ("", "f78f:Convert 260 bytes to 325 bytes group code"),
    63462 : ("", "f7e6:Convert 5 GCR bytes to 4 binary bytes"),
    63648 : ("", "f8a0:Conversion table GCR to binary - high nybble"),
    63680 : ("", "f8c0:Conversion table GCR to binary - low nybble"),
    63712 : ("", "f8e0:Decode 69 GCR bytes"),
    63796 : ("", "f934:Convert block header to GCR code"),
    63849 : ("", "f969:Error entry disk controller"),
    63870 : ("", "f97e:Turn drive motor on"),
    63887 : ("", "f98f:Turn drive motor off"),
    63900 : ("", "f99c:Job loop disk controller"),
    64005 : ("", "fa05:Move head to next track"),
    64028 : ("", "fa1c:Calculate number of head steps"),
    64059 : ("", "fa3b:Move stepper motor short distance"),
    64078 : ("", "fa4e:Load head"),
    64123 : ("", "fa7b:Prepare fast head movement"),
    64151 : ("", "fa97:Fast head movement"),
    64165 : ("", "faa5:Prepare slow head movement"),
    64199 : ("", "fac7:Formatting"),
    64931 : ("", "fda3:Write SYNC 10240 times, erase track"),
    64963 : ("", "fdc3:Read/write ($621/$622) times"),
    64979 : ("", "fdd3:Attempt counter for formatting"),
    65013 : ("", "fdf5:Copy data from overflow buffer"),
    65024 : ("", "fe00:Switch to reading"),
    65038 : ("", "fe0e:Write $55 10240 times"),
    65072 : ("", "fe30:Convert header in buffer 0 to GCR code"),
    65127 : ("", "fe67:Interrupt routine"),
    65255 : ("", "fee7:From UI command $EB22, to reset"),
    65258 : ("", "feea:Patch for diagnostic routine from $EA7A"),
    65267 : ("", "fef3:Delay loop for serial bus in 1541 mode, from $E97D"),
    65275 : ("", "fefb:Patch for data output to serial bus, from $E980"),
    65281 : ("", "ff01:U9 vector, switch 1540/1541"),
    65296 : ("", "ff10:Patch for reset routine, from $EAA4"),
    65312 : ("", "ff20:Patch for listen to serial bus, from $E9DC"),
    65510 : ("", "ffe6:Format[C8C6]"),
    65512 : ("", "ffe8:Turn motor off [F98F]")
}

ram1541_labels = {
    0 : ("", "0000:Command code for buffer 0"),
    1 : ("", "0001:Command code for buffer 1"),
    2 : ("", "0002:Command code for buffer 2"),
    3 : ("", "0003:Command code for buffer 3"),
    4 : ("", "0004:Command code for buffer 4"),
    6 : ("", "0006:Track buffer 0"),
    7 : ("", "0007:Sector buffer 0"),
    8 : ("", "0008:Track buffer 1"),
    9 : ("", "0009:Sector buffer 1"),
    10 : ("", "000a:Track buffer 2"),
    11 : ("", "000b:Sector buffer 2"),
    12 : ("", "000c:Track buffer 3"),
    13 : ("", "000d:Sector buffer 3"),
    14 : ("", "000e:Track buffer 4"),
    15 : ("", "000f:Sector buffer 5"),
    18 : ("", "0012:Disk ID, drive 0"),
    20 : ("", "0014:Disk ID, drive 1"),
    22 : ("", "0016:Header block: ID"),
    24 : ("", "0018:Header block: Track"),
    25 : ("", "0019:Header block: Sector"),
    26 : ("", "001a:Header block: Parity"),
    28 : ("", "001c:Flag for disk change, drive 0 [01]"),
    29 : ("", "001d:Flag for disk change, drive 1 [01]"),
    30 : ("", "001e:Flag for write protect sense, drive 0 [01]"),
    31 : ("", "001f:Flag for write protect sense, drive 1"),
    32 : ("", "0020:Drive 0 status (disk and step motor)"),
    33 : ("", "0021:Drive 1 status (disk and step motor)"),
    34 : ("", "0022:Current track for drive 0"),
    35 : ("", "0023:Flag for 1541 (0), 1540 (not 0)"),
    36 : ("", "0024:Scratch pad of GCR conversion"),
    46 : ("", "002e:Pointer for temporary storage"),
    48 : ("", "0030:Buffer pointer for disk controller"),
    50 : ("", "0032:Pointer: active track"),
    51 : ("", "0033:Pointer: active sector"),
    52 : ("", "0034:Pointer to last converted byte"),
    53 : ("", "0035:Not used (decode error, GCR)"),
    54 : ("", "0036:Byte counter for GCR/BIN conversion"),
    55 : ("", "0037:Not used (bit counter)"),
    56 : ("", "0038:Constant 7, ID mark for start of data block"),
    57 : ("", "0039:Constant 8, ID mark for start of block header"),
    58 : ("", "003a:Parity for data buffer"),
    59 : ("", "003b:Not directly used"),
    60 : ("", "003c:Not directly used"),
    61 : ("", "003d:Motor flag"),
    62 : ("", "003e:Active drive (FF, if not active)"),
    63 : ("", "003f:Buffer number for disk controller"),
    64 : ("", "0040:Byte counter for GCR conversion"),
    65 : ("", "0041:Number of next work in queue (0 - 5)"),
    66 : ("", "0042:Destination track (to move R/W head to)"),
    67 : ("", "0043:Number of sectors per track for formatting"),
    68 : ("", "0044:Temp. work area; Scratch pad"),
    69 : ("", "0045:Work code temp. storage"),
    71 : ("", "0047:Data block ID char, default 07."),
    72 : ("", "0048:Counter for head movement"),
    73 : ("", "0049:Stack pointer temp. storage [39]"),
    74 : ("", "004a:Step counter for head transport"),
    76 : ("", "004c:Last read sector"),
    77 : ("", "004d:Next sector"),
    78 : ("", "004e:Pointer to buffer for GCR->BIN conversion"),
    80 : ("", "0050:Flag for GCR format (0=BIN, 1=GCR)"),
    81 : ("", "0051:Current track number for formatting [FF]"),
    82 : ("", "0052:Storage for 4 BIN bytes for GCR coding"),
    86 : ("", "0056:Storage for 5 GCR bytes"),
    94 : ("", "005e:Number of steps for head motor accelerating/decl. [04]"),
    95 : ("", "005f:accelerating/decl. factor [04]"),
    98 : ("", "0062:Pointer to routine for head movement [FA05]"),
    100 : ("", "0064:Minimum number of steps [C8]"),
    101 : ("", "0065:UI vector [$EB22]"),
    103 : ("", "0067:Flag: NMI"),
    104 : ("", "0068:Flag for disk initialisation"),
    105 : ("", "0069:Step size for sector division [0A]"),
    106 : ("", "006a:Number of read attempts [5]"),
    107 : ("", "006b:Pointer: Start of Jump table for U commands [FFEA]"),
    109 : ("", "006d:Pointer: Start of bitmap [0400]"),
    111 : ("", "006f:Pointer to address for M & B commands"),
    113 : ("", "0071:Temp work area"),
    114 : ("", "0072:Temp work area"),
    115 : ("", "0073:Temp work area"),
    116 : ("", "0074:Temp work area"),
    117 : ("", "0075:Indirect pointer [0100]"),
    119 : ("", "0077:Listener address (Device number + $20) [28]"),
    120 : ("", "0078:Talker address (Device number + $40) [48]"),
    121 : ("", "0079:Flag: Active listener"),
    122 : ("", "007a:Flag: Active talker"),
    124 : ("", "007c:Flag for ATN from serial bus receiving"),
    125 : ("", "007d:Flag for ATN on serial bus active"),
    126 : ("", "007e:Last handled program"),
    127 : ("", "007f:Drive number (on 1541 always 00)"),
    128 : ("", "0080:Current Track number"),
    129 : ("", "0081:Current Sector number"),
    130 : ("", "0082:Channel number (Logical index)"),
    131 : ("", "0083:Secondary address"),
    132 : ("", "0084:Original Secondary address [6F]"),
    133 : ("", "0085:Current Data byte [3F]"),
    134 : ("", "0086:Temp Results area"),
    139 : ("", "008b:Work storage area for division"),
    148 : ("", "0094:Current buffer pointer"),
    153 : ("", "0099:Pointer: Next byte in buffer 0 [0300]"),
    155 : ("", "009b:Pointer: Next byte in buffer 1 [0400]"),
    157 : ("", "009d:Pointer: Next byte in buffer 2 [0500]"),
    159 : ("", "009f:Pointer: Next byte in buffer 3 [0600]"),
    161 : ("", "00a1:Pointer: Next byte in buffer 4 [0700]"),
    163 : ("", "00a3:Pointer: Next byte in command buffer [0200]"),
    165 : ("", "00a5:Pointer: Next byte in error message buffer [02D6]"),
    167 : ("", "00a7:Table: Non-active channel numbers for each buffer"),
    181 : ("", "00b5:Table: Record # low , block # low"),
    187 : ("", "00bb:Table: Record # high, block # high"),
    193 : ("", "00c1:Write pointer for REL file"),
    199 : ("", "00c7:Table: Record length for REL file"),
    205 : ("", "00cd:Table: Side sectors"),
    212 : ("", "00d4:Pointer in record for REL file"),
    213 : ("", "00d5:Side sector number"),
    214 : ("", "00d6:Pointer to data block in side sector"),
    215 : ("", "00d7:Pointer to record in REL file"),
    216 : ("", "00d8:Directory sectors"),
    221 : ("", "00dd:Index: Directory"),
    226 : ("", "00e2:Default disk drive [00]"),
    231 : ("", "00e7:File type (wild cards, @, closed)"),
    236 : ("", "00ec:File type (channel)"),
    242 : ("", "00f2:Channel status"),
    248 : ("", "00f8:Flag for EOI"),
    249 : ("", "00f9:Current work (Buffer number)"),
    250 : ("", "00fa:Last used table"),
    255 : ("", "00ff:Flag: FF = drive 0 not ready (No disk), 00 = ready"),
    256 : ("", "0100:Flag: FF = drive 1 not ready (No disk), 00 = ready"),
    257 : ("", "0101:Format marker, drive 0"),
    258 : ("", "0102:Format marker, drive 1"),
    442 : ("", "01ba:Buffer for GCR code"),
    512 : ("", "0200:Buffer for command string"),
    554 : ("", "022a:Command code"),
    555 : ("", "022b:Logical index, channel 0"),
    556 : ("", "022c:Logical index, channel 1"),
    557 : ("", "022d:Logical index, channel 2"),
    558 : ("", "022e:Last read/written byte for each channel"),
    580 : ("", "0244:Pointer: Last char on channel."),
    586 : ("", "024a:Type of active file"),
    587 : ("", "024b:String length"),
    588 : ("", "024c:Temp. channel number (secondary address)"),
    589 : ("", "024d:Current work with drive number"),
    590 : ("", "024e:Work area to find the best sector"),
    591 : ("", "024f:Buffer allocated"),
    593 : ("", "0251:Flag: BAM changed, drive 0"),
    594 : ("", "0252:Flag: BAM changed, drive 1"),
    595 : ("", "0253:Flag for directory entry found"),
    596 : ("", "0254:Flag for directory output"),
    597 : ("", "0255:Flag: Waiting for command"),
    599 : ("", "0257:Last used buffer"),
    600 : ("", "0258:Record length"),
    601 : ("", "0259:Track of side sector"),
    602 : ("", "025a:Sector of side sector"),
    603 : ("", "025b:Last work (buffers)"),
    608 : ("", "0260:Directory sector (buffers)"),
    614 : ("", "0266:File's index in directory (buffers)"),
    620 : ("", "026c:Counter for LED flash"),
    621 : ("", "026d:Error LED"),
    622 : ("", "026e:Drive for last program"),
    623 : ("", "026f:sector for last program"),
    624 : ("", "0270:Write LINDX"),
    625 : ("", "0271:Read LINDX"),
    626 : ("", "0272:Number of blocks (temp)"),
    628 : ("", "0274:Length of input line"),
    629 : ("", "0275:Char to interpret"),
    630 : ("", "0276:Index: End of filename in command buffer"),
    632 : ("", "0278:Number of file names"),
    634 : ("", "027a:Pointer table: Filenames"),
    640 : ("", "0280:Track of a file"),
    645 : ("", "0285:Sector of a file"),
    650 : ("", "028a:Flag: wild cards"),
    652 : ("", "028c:Number of drive(s ?) to look for"),
    653 : ("", "028d:Flag: Looking for drive"),
    654 : ("", "028e:drive with last write/open error, used as default drive"),
    655 : ("", "028f:Flag: Found in directory"),
    656 : ("", "0290:Directory sector"),
    657 : ("", "0291:Sector for first available file"),
    658 : ("", "0292:Index (in directory) for first available file"),
    659 : ("", "0293:For the last directory entry 0"),
    660 : ("", "0294:Current buffer-index"),
    661 : ("", "0295:Counter: Files"),
    662 : ("", "0296:Flag: Name matching wild cards"),
    663 : ("", "0297:Active operating mode (R or W)"),
    664 : ("", "0298:Flag: Work return"),
    665 : ("", "0299:Pointer: Re-read error"),
    666 : ("", "029a:Total tracks"),
    667 : ("", "029b:Pointer: BAM last update"),
    669 : ("", "029d:BAM: image sector (drives 0 and 1)"),
    673 : ("", "02a1:BAM image"),
    689 : ("", "02b1:Buffer for directory output"),
    725 : ("", "02d5:Buffer for error message"),
    761 : ("", "02f9:Flag: Don't write BAM"),
    762 : ("", "02fa:Number of free blocks, low byte for drives 0 ja 1"),
    764 : ("", "02fc:Number of free blocks, hi byte for drives 0 ja 1"),
    766 : ("", "02fe:Stepper motor sequence"),
    768 : ("", "0300:Buffer 0"),
    1024 : ("", "0400:Buffer 1"),
    1280 : ("", "0500:Buffer 2"),
    1536 : ("", "0600:Buffer 3"),
    1569 : ("", "0621:Formatting counter"),
    1792 : ("", "0700:Buffer 4")
}

def run():
    memory = currentProgram.getMemory()
    
    # make sure something's selected
    if currentSelection is None or currentSelection.isEmpty():
        print("Error: Must select a section of the disassembly to label")
        return

    # select device 
    choice1_C64 = "C64 ROM/RAM/IOregs"
    choice1_1541 = "1541 ROM/RAM/IOregs"
    choice1 = askChoice("Device", "Select one", [choice1_C64, choice1_1541], choice1_C64)

    # select memory ranges
    [ROMKERNAL, RAMKERNAL, ROMBASIC, RAMBASIC, IOREGS, ROMANDIO1541, RAM1541] = [0,1,2,3,4,5,6]
    if choice1 == choice1_C64:
        choices2 = askChoices(
            "Ranges", "Select one or more ranges", [ROMKERNAL, RAMKERNAL, ROMBASIC, RAMBASIC, IOREGS],
            ["KERNAL ROM calls", "KERNAL RAM usage", "BASIC ROM calls", "BASIC RAM usage", "IO registers"]    
        )
    else:
        choices2 = askChoices(
            "Ranges", "Select one or more ranges", [ROMANDIO1541, RAM1541],
            ["Range: 1541 IO and ROM calls", "Range: 1541 RAM usage"]    
        )

    if len(choices2) == 0:
        print("No range(s) selected")
        return

    # select labels or comments
    choice3_addr_label = "address primary labels"
    choice3_eol_comment = "EOL descriptive comments"
    choice3 = askChoice("Create...", "Select one", [choice3_addr_label, choice3_eol_comment], choice3_addr_label)
    create_label = (choice3 == choice3_addr_label)
    create_comment = not create_label

    # select instructions' addresses or addresses in operands
    choice4_operand_addr = "addresses in operands"
    choice4_addr = "addresses"
    if choice3 == choice3_addr_label:
        choices4 = askChoices("Set primary labels for selected...", "Select one or more",
            [choice4_operand_addr, choice4_addr])
        for_instruction_addr = choice4_addr in choices4
        for_operand_addr = choice4_operand_addr in choices4
    else:
        choice4 = askChoice("Set EOL comments for selected...", "Select one",
            [choice4_operand_addr, choice4_addr], choice4_operand_addr)
        for_instruction_addr = (choice4 == choice4_addr)
        for_operand_addr = not for_instruction_addr

    # select replace or not
    replace = askYesNo("Replace", "Replace existing labels and/or comments?")

    range_lookups = {
        ROMKERNAL: romkernal_labels, RAMKERNAL: ramkernal_labels, ROMBASIC: rombasic_labels, RAMBASIC: rambasic_labels,
        IOREGS: ioregs_labels, ROMANDIO1541: romio1541_labels, RAM1541: ram1541_labels
    }
    lookups = {}
    for range in choices2:
        lookups.update(range_lookups[range]) # merge all the selected ranges

    addr_iter = currentSelection.getAddresses(True) # True == iterate accending
    for addr in addr_iter: # iterate over user selection
        inst = getInstructionAt(addr)
        
        addr_lookup = None
        if for_instruction_addr:
            if addr.getOffset() in lookups:
                addr_lookup = lookups[addr.getOffset()]

        operand_addr_lookup = operand_addr = None
        if for_operand_addr:
            if inst is not None and inst.getNumOperands() > 0 and (inst.getOperandType(0) & ADDRESS) > 0:
                # get the one or two-byte address in the operand (little endian)
                inst_bytes = inst.getBytes()
                operand_addr = inst_bytes[1] & 0xff
                if len(inst_bytes) == 3:
                    operand_addr += (inst_bytes[2] & 0xff) * 256
                if inst.getFlowType() == CONDITIONAL_JUMP:  # if a 6502 conditional branch
                    # TODO: could easily change this 8-bit signed offset into an address for lookup,
                    #       but for now, we'll just not process the Bxx instructions
                    pass
                else:
                    operand_addr = toAddr(operand_addr)
                    if operand_addr.getOffset() in lookups:
                        operand_addr_lookup = lookups[operand_addr.getOffset()]
            
        if create_label:
            if addr_lookup is not None:
                setPrimaryLabelOnAddr(addr, addr_lookup[0], replace)
            if operand_addr_lookup is not None:
                setPrimaryLabelOnAddr(operand_addr, operand_addr_lookup[0], replace)

        if create_comment:
            if addr_lookup is not None:
                setEOLCommentOnAddr(addr, "%s" % (addr_lookup[1]))         
            if operand_addr_lookup is not None:    
                setEOLComment(addr, "%s" % (operand_addr_lookup[1]))


def setPrimaryLabelOnAddr(addr, label, replace = False):
    if label.strip() == "":
        return
        
    symbol_table = currentProgram.getSymbolTable()
    symbol = symbol_table.getPrimarySymbol(addr)
    
    if not replace and symbol is not None:
        return

    new_symbol = symbol_table.createLabel(addr, label, currentProgram.getGlobalNamespace(), USER_DEFINED)
    new_symbol.setPrimary()
    #new_symbol.setPinned(True)


def setEOLCommentOnAddr(addr, comment, replace = False):
    if comment.strip() == "":
        return
    if not replace and getEOLComment(addr) is not None:
        return

    setEOLComment(addr, comment)

run()
